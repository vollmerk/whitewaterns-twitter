#!/usr/bin/env python
# vim: set softtabstop=2 ts=2 sw=2 expandtab: 
#
# Copyright (c) 2016 Karl Vollmer (karl.vollmer@gmail.com)
#
import numpy as np,sys,tempfile
import pygrib
import urllib
import json

"""
 Lons are + always, so -63 == 297 (360-63)
 This script expects to always get the significant wave+swell height, and will then go back
 and grab period and direction for same area SWDIR and SWPER
 FIXME: Should accept additional arguments, of lat/lon constraint
"""
heightsource = sys.argv[1]
dirsource = heightsource.replace("HTSGW_","SWDIR_")
persource = heightsource.replace("HTSGW_","SWPER_")
source = urllib.urlopen(sys.argv[1])
tmpfile = tempfile.NamedTemporaryFile()
tmpfile.write(source.read())
tmpfile.read()

wavelevels = []
grbs = pygrib.open(tmpfile.name)
for grb in grbs:
  """ From above, maybe as a try? """
  ##wave = grbs.select(name='Significant height of wind waves')
  #data, lats, lons = grb.data(lat1=34,lat2=46,lon1=296,lon2=299)
  data, lats, lons = grb.data(lat1=44.3,lat2=44.6,lon1=297,lon2=297.3)
  for row in data:
    wavelevels.append(np.mean(row))

level = round(np.mean(wavelevels),2)

source = urllib.urlopen(dirsource)
tmpfile = tempfile.NamedTemporaryFile()
tmpfile.write(source.read())
tmpfile.read()

grbs = pygrib.open(tmpfile.name)
for grb in grbs
  data, lats, lons = grb.data(lat1=44.3,lat2=44.6,lon1=297,lon2=297.3)
  for row in data:
    wavedirs.append(np.mean(row))

direction = round(np.mean(wavedirs),2)
level_info = direction 

source = urllib.urlopen(persource)
tmpfile = tempfile.NamedTemporaryFile()
tmpfile.write(source.read())
tmpfile.read()

grbs = pygrib.open(tmpfile.name)
for grb in grbs
  data, lats, lons = grb.data(lat1=44.3,lat2=44.6,lon1=297,lon2=297.3)
  for row in data:
    waveper.append(np.mean(row))

period = round(np.mean(waveper),2)

level_info = 'm at %s seconds, from %s degrees' % (period,direction)

print json.dumps({'level':level,'level_type':'surf','level_info',level_info})
